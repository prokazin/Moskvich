// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK
vkBridge.send('VKWebAppInit');

let score = 0;
let upgradeLevel = 0;
let upgradeCost = 10;
let pointsPerClick = 1;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const scoreDisplay = document.getElementById('score');
const clickBtn = document.getElementById('click-btn');
const upgradeBtn = document.getElementById('upgrade-btn');
const upgradeLevelDisplay = document.getElementById('upgrade-level');
const upgradeCostDisplay = document.getElementById('upgrade-cost');

clickBtn.addEventListener('click', () => {
  score += pointsPerClick;
  updateDisplay();
  vkBridge.send('VKWebAppTapticNotificationOccurred', { type: 'success' });
});

upgradeBtn.addEventListener('click', () => {
  if (score >= upgradeCost) {
    score -= upgradeCost;
    upgradeLevel++;
    pointsPerClick++;
    upgradeCost = Math.floor(upgradeCost * 1.6);

    // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∞–ø–≥—Ä–µ–π–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
    let upgradeName = getUpgradeName(upgradeLevel);
    upgradeBtn.innerHTML = `${upgradeName} (+1 –±–æ–ª—Ç –∑–∞ –∫–ª–∏–∫) ‚Äî <span id="upgrade-cost">${upgradeCost}</span> –±–æ–ª—Ç–æ–≤`;

    updateDisplay();
  } else {
    vkBridge.send('VKWebAppTapticNotificationOccurred', { type: 'error' });
  }
});

function updateDisplay() {
  scoreDisplay.textContent = score;
  upgradeLevelDisplay.textContent = upgradeLevel;
  document.getElementById('upgrade-cost').textContent = upgradeCost;
}

function getUpgradeName(level) {
  const names = [
    'üü¢ –ú—è—Ç–Ω—ã–π –∫–∞–ø–æ—Ç',
    '‚ú® –õ—é—Å—Ç—Ä–∞ –Ω–∞ –∫—Ä—ã—à—É',
    'üßº –ß–µ—Ö–ª—ã –æ—Ç –ñ–∏–≥—É–ª–µ–π',
    'üí• –°–ø–æ–π–ª–µ—Ä –∏–∑ –æ—Ü–∏–Ω–∫–æ–≤–∫–∏',
    'üé® –ê—ç—Ä–æ–≥—Ä–∞—Ñ–∏—è ¬´–í–æ–ª–∫¬ª',
    'üöÄ –ö–∞—Ä–±—é—Ä–∞—Ç–æ—Ä —Å –û–∑–æ–Ω–∞'
  ];
  return names[level % names.length] || 'üöò –£–ª—É—á—à–µ–Ω–∏–µ';
}
